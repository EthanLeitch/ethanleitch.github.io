---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;

import "$lib/styles/app.css";

// Light and dark theme
import { ModeWatcher } from "mode-watcher";
import ModeToggle from "$lib/components/custom/iconbutton/mode-toggle.svelte";
import { Separator } from "$lib/components/ui/separator";
---

<script is:inline>
	const isBrowser = typeof localStorage !== 'undefined';
	const getThemePreference = () => {
	  if (isBrowser && localStorage.getItem('theme')) {
		return localStorage.getItem('theme');
	  }
	  return window.matchMedia('(prefers-color-scheme: dark)').matches
		? 'dark' : 'light';
	};
	
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
   
	if (isBrowser) {
	  const observer = new MutationObserver(() => {
		const isDark = document.documentElement.classList.contains('dark');
		localStorage.setItem('theme', isDark ? 'dark' : 'light');
	  });
	  observer.observe(document.documentElement, {
		attributes: true,
		attributeFilter: ['class']
	  });
	}
  </script>

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		
		<nav class="background shadow-md p-5">
			<div class="container mx-auto flex justify-between items-center">
				<!-- Home link -->
				<div class="flex h-5 items-center space-x-4 text-sm">
					<a href="/" class="text-lg font-semibold">Home</a>
					<Separator orientation="vertical" />
					<a href="/sitemap" class="text-lg font-semibold">Sitemap</a>
				</div>
				
				<!-- Theme button -->
				<ModeWatcher client:load />
				<ModeToggle client:load />
			</div>
		</nav>

		<main class="container mx-auto px-4 py-16 max-w-4xl">
			<slot />
		</main>
	</body>
</html>
